# Generated documentation for module arcpy.management


class EnableFeatureBinning(object):
    """
    Enables database computation for feature binning on a feature class.
    """

    @property
    def description(self) -> str:
        return """

        EnableFeatureBinning_management(in_features, {bin_type}, {bin_coord_sys;bin_coord_sys...}, {summary_stats;summary_stats...}, {generate_static_cache})

        Enables database computation for feature binning on a feature class.

     INPUTS:
      in_features (Feature Layer):
          The feature class for which database computed feature binning will be
          enabled. Supported input types are point and multipoint feature
          classes stored in an enterprise geodatabase or database, or point
          feature classes stored in a cloud data warehouse. The data cannot be
          versioned or archive enabled.
      bin_type {String}:
          Specifies the type of binning that will be enabled. If you are using
          SAP HANA data, only the SQUARE, FLAT_HEXAGON, and POINTY_HEXAGON
          options are supported. If you are using Snowflake or Redshift data,
          only the GEOHASH option is supported.FLAT_HEXAGON-The flat hexagon
          binning scheme, also known as flat
          geohex or flat hexbinning, will be enabled. The tiles are a
          tessellation of hexagons in which the orientation of the hexagons has
          a flat edge of the hexagon on top. This is the default for Microsoft
          SQL Server, Oracle, PostgreSQL, and BigQuery data.POINTY_HEXAGON-The
          pointy hexagon binning scheme, also known as pointy
          geohex or pointy hexbinning, will be enabled. The tiles are a
          tessellation of hexagons in which the orientation of the hexagons has
          a point of the hexagon on top.SQUARE-The square binning scheme, also
          known as geosquare or
          squarebinning, will be enabled. The tiles are a tessellation of
          squares This is the default for Db2 and SAP HANA data.GEOHASH-The
          geohash binning scheme, in which the tiles are a
          tessellation of rectangles, will be enabled. Because geohash bins
          always use the WGS84 geographic coordinate system (GCS WGS84, EPSG
          WKID 4326), you cannot specify a bin coordinate system for geohash
          bins. This is the default and only option for Snowflake and Redshift
          data.
      bin_coord_sys {Coordinate System}:
          The coordinate systems that will be used to visualize the aggregated
          output feature layer. You can specify up to two coordinate systems to
          visualize the output layer. By default, the coordinate system of the
          input feature class is used. Custom coordinate systems are not
          supported.This parameter does not apply to BigQuery, Redshift, or
          Snowflake. For
          those platforms, the coordinate system of the input feature class is
          used.
      summary_stats {Value Table}:
          Specifies the statistics that will be summarized and stored in
          the bin cache. Statistics are used to symbolize bins and provide
          aggregate information for all the points in a bin. One summary
          statistic, the total feature count (shape_count), is always available.
          You can define up to five additional summary statistics.
          Field-The field on which the summary statistics will be calculated.
          Supported field types are short integer, long integer, big integer,
          float, and double. Statistic Type-The type of statistic that
          will be calculated
          for the specified field. Statistics are calculated for all features in
          the bin. Available statistics types are as follows:          Mean
          (AVG)-Calculates the average for the specified fieldMinimum
          (MIN)-Finds the smallest value for all records of the
          specified fieldMaximum (MAX)-Finds the largest value for all records
          of the specified
          fieldStandard deviation (STDDEV)-Calculates the standard deviation
          value
          for the fieldSum (SUM)-Adds the total value for the specified field
      generate_static_cache {Boolean}:
          Specifies whether a static cache of the aggregated results will be
          generated or visualizations will be aggregated on the fly. The cache
          is not necessarily created for all levels of detail.
          STATIC_CACHE-                  A static cache of the
          aggregated results will be generated.
          It is recommended that you use this option for better performance.
          However, changes to the underlying data will not be updated in the
          cache unless the Manage Feature Bin Cache tool is run. A
          static cache is generated by default for data in IBM Db2, Microsoft
          SQL Server, Oracle, and PostgreSQL.To generate a static cache for
          feature classes in PostgreSQL that use
          PostGIS spatial types, GDAL libraries must be installed in the
          database.A static cache is always generated for data in BigQuery,
          Redshift, and
          Snowflake.DYNAMIC-A static cache of the aggregated results will not be
          generated, and visualizations will be aggregated on the fly. This is
          the only option for SAP HANA data.

        """